/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './app/__root'
import { Route as SignUpRouteImport } from './app/sign-up'
import { Route as SignInRouteImport } from './app/sign-in'
import { Route as ResetPasswordRouteImport } from './app/reset-password'
import { Route as AboutRouteImport } from './app/about'
import { Route as IndexRouteImport } from './app/index'
import { Route as AuthedProductsIndexRouteImport } from './app/_authed/products/index'

const SignUpRoute = SignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInRoute = SignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const ResetPasswordRoute = ResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthedProductsIndexRoute = AuthedProductsIndexRouteImport.update({
  id: '/_authed/products/',
  path: '/products/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/reset-password': typeof ResetPasswordRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/products': typeof AuthedProductsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/reset-password': typeof ResetPasswordRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/products': typeof AuthedProductsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/reset-password': typeof ResetPasswordRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/_authed/products/': typeof AuthedProductsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/reset-password'
    | '/sign-in'
    | '/sign-up'
    | '/products'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/reset-password' | '/sign-in' | '/sign-up' | '/products'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/reset-password'
    | '/sign-in'
    | '/sign-up'
    | '/_authed/products/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ResetPasswordRoute: typeof ResetPasswordRoute
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
  AuthedProductsIndexRoute: typeof AuthedProductsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authed/products/': {
      id: '/_authed/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof AuthedProductsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ResetPasswordRoute: ResetPasswordRoute,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
  AuthedProductsIndexRoute: AuthedProductsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
